const weaviate = require('weaviate-client');
require('dotenv').config();

const client = weaviate.client({
  scheme: 'https',
  host: process.env.WEAVIATE_URL.replace(/^https?:\/\//, ''),
  apiKey: new weaviate.ApiKey(process.env.WEAVIATE_API_KEY),
});

const EmotionalEncounterSchema = {
  class: 'EmotionalEncounter',
  description: 'Stores emotionally charged user interactions with CL-0',
  vectorizer: 'text2vec-openai',
  moduleConfig: {
    'text2vec-openai': {
      model: 'text-embedding-ada-002',
      modelVersion: '002',
      type: 'text',
    },
  },
  properties: [
    {
      name: 'rawInputText',
      dataType: ['text'],
      description: 'Raw user input text from conversation',
    },
    {
      name: 'cl0ResponseText',
      dataType: ['text'],
      description: 'Response text generated by CL-0',
    },
    {
      name: 'detectedEmotionClass',
      dataType: ['text'],
      description: 'Dominant emotional classification (e.g., sad, happy)',
    },
    {
      name: 'isMemorablePainful',
      dataType: ['boolean'],
      description: 'Marks if the moment should be memorized for future recall',
    },
  ],
};

(async () => {
  try {
    const schemaRes = await client.schema.getter().do();
    const classExists = schemaRes.classes.some((cls) => cls.class === 'EmotionalEncounter');

    if (classExists) {
      console.log('✅ Weaviate class EmotionalEncounter already exists.');
    } else {
      await client.schema.classCreator().withClass(EmotionalEncounterSchema).do();
      console.log('🎉 EmotionalEncounter class successfully created.');
    }
  } catch (error) {
    console.error('❌ Failed to create Weaviate class:', error.message);
  }
})();
